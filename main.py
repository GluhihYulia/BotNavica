from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
import logging

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –æ—à–∏–±–∫–∏
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        welcome_text = "–ü—Ä–∏–≤–µ—Ç üëã\n–ö—Ç–æ —Ç—ã?"

        keyboard = [
            [InlineKeyboardButton("–í–∑—Ä–æ—Å–ª—ã–π", callback_data="adult")],
            [InlineKeyboardButton("–ü–æ–¥—Ä–æ—Å—Ç–æ–∫", callback_data="teen")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        if update.message:
            await update.message.reply_text(welcome_text, reply_markup=reply_markup)
        else:
            await update.callback_query.message.reply_text(welcome_text, reply_markup=reply_markup)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ start: {e}")

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        query = update.callback_query
        await query.answer()

        if query.data == "adult":
            await query.edit_message_text("–¢—ã –≤—ã–±—Ä–∞–ª: –í–∑—Ä–æ—Å–ª—ã–π ‚úÖ")
        elif query.data == "teen":
            await query.edit_message_text("–¢—ã –≤—ã–±—Ä–∞–ª: –ü–æ–¥—Ä–æ—Å—Ç–æ–∫ ‚úÖ")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ button_handler: {e}")

def main():
    try:
        # –ó–∞–º–µ–Ω–∏—Ç–µ —Ç–æ–∫–µ–Ω –Ω–∞ —Å–≤–æ–π
        TOKEN = "8440906881:AAEHXC3JNzdIccA7-DyGXxzCw0VQFU4DM1k"

        app = Application.builder().token(TOKEN).build()

        app.add_handler(CommandHandler("start", start))
        app.add_handler(CallbackQueryHandler(button_handler))

        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
        app.run_polling()

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

if __name__ == "__main__":
    main()
